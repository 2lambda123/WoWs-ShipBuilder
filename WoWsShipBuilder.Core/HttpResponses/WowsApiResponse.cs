// <auto-generated />

using Newtonsoft.Json;
using System;
using System.Collections.Generic;


namespace WoWsShipBuilder.Core.HttpResponses
{
    public class WowsApiResponse<T>
    {
        public string Status { get; set; }
        public WowsApiResponseMeta Meta { get; set; }
        public WowsApiResponseError Error { get; set; }
        public T Data { get; set; }
    }

    public class WowsApiResponseMeta
    {
        public int Count { get; set; }
        public int? Page_total { get; set; }
        public int? Total { get; set; }
        public int? Limit { get; set; }
        public int? Page { get; set; }
    }

    public class WowsApiResponseError
    {
        public string Field { get; set; }
        public string Message { get; set; }
        public string Code { get; set; }
        public string Value { get; set; }
    }

    /// <summary>
    /// Exception thrown when something wrong happens with WG API response.
    /// </summary>
    /// <param name="Id">The IDs of the items returning incorrect response.</param>
    /// <param name="Field">Section of the WG API response returning the incorrect response.</param>
    /// <param name="Answer">Error message returned by WG API.</param>
    /// <param name="Code">Error code returned by WG API</param>
    /// <param name="Value">The value returning the incorrect response.</param>
    /// 
    [Serializable]
    public class WowsApiException : Exception
    {
        public string Id { get; }
        public string Field { get; }
        public string Answer { get; }
        public string Code { get; }
        public string Value { get; }

        public WowsApiException() { }

        public WowsApiException(string message)
            : base(message) { }

        public WowsApiException(string message, Exception inner)
            : base(message, inner) { }

        public WowsApiException(string message, string id)
            : this(message)
        {
            this.Id = id;
        }
        public WowsApiException(string message, string field, string answer, string code, string value)
           : this(message)
        {
            this.Field = field;
            this.Answer = answer;
            this.Code = code;
            this.Value = value;
        }
    }

    #region Ships and Camos Images
    public enum ImageSize
    {
        Small,
        Large,
        Medium,
        Contour
    }
    public enum ImageType
    {
        Ship,
        Camo
    }
    public class ImageData
    {
        [JsonProperty("images")]
        public Dictionary<ImageSize, string> ShipImages { get; set; }

        [JsonProperty("image")]
        public string CamoImage { get; set; }
    }
    #endregion
}
