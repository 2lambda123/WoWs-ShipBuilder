@using WoWsShipBuilder.ViewModels.Helper
@using WoWsShipBuilder.ViewModels.Other
@using WoWsShipBuilder.DataStructures
@code {

    // Parameter needs to be named __builder, otherwise compilation will fail.
    // ReSharper disable once InconsistentNaming UnusedParameter.Local
    public static readonly RenderFragment<(ShipComparisonViewModel.DataSections section, ILocalizer localizer)> RocketsDataFragment = element => __builder =>
    {
        bool hide = element.section != ShipComparisonViewModel.DataSections.Rockets;
        
        <Column Hidden="hide" T="ShipComparisonDataWrapper" Field="RocketPlanesType" Title="Plane" SortBy="@(x=> !x.RocketPlanesType.Any() ? string.Empty : element.localizer.GetAppLocalization($"ShipStats_{x.RocketPlanesType.First()}").Localization)" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.RocketPlanesType.Any())
                {
                    List<string> items = context.Item.RocketPlanesType;
                    for (var i = 0; i < items.Count; i++)
                    {
                        string item = items[i];
                        <MudText Typo="Typo.body2">
                            @element.localizer.GetAppLocalization($"ShipStats_{item}").Localization
                        </MudText>
                        if (i < items.Count - 1)
                        {
                            <MudDivider Class="my-1"/>
                        }
                    }
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </Column>

        <Column Hidden="hide" T="ShipComparisonDataWrapper" Field="RocketPlanesWeaponType" Title="Type" SortBy="@(x=> !x.RocketPlanesWeaponType.Any() ? string.Empty : element.localizer.GetAppLocalization(x.RocketPlanesWeaponType.First()).Localization)" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.RocketPlanesWeaponType.Any())
                {
                    List<string> items = context.Item.RocketPlanesWeaponType;
                    for (var i = 0; i < items.Count; i++)
                    {
                        string item = items[i];
                        <MudText Typo="Typo.body2">
                            @element.localizer.GetAppLocalization(item).Localization
                        </MudText>
                        if (i < items.Count - 1)
                        {
                            <MudDivider Class="my-1"/>
                        }
                    }
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </Column>
        
        <Column Hidden="hide" T="ShipComparisonDataWrapper" Field="RocketPlanesWeaponDamage" Title="Damage" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.RocketPlanesWeaponDamage.Any())
                {
                    List<decimal> items = context.Item.RocketPlanesWeaponDamage;
                    for (var i = 0; i < items.Count; i++)
                    {
                        decimal item = items[i];
                        <MudText Typo="Typo.body2">
                            @item
                        </MudText>
                        if (i < items.Count - 1)
                        {
                            <MudDivider Class="my-1"/>
                        }
                    }
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </Column>
        
        <Column Hidden="hide" T="ShipComparisonDataWrapper" Field="RocketPlanesWeaponSplashRadius" Title="Splash radius (m)" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.RocketPlanesWeaponSplashRadius.Any())
                {
                    List<decimal> items = context.Item.RocketPlanesWeaponSplashRadius;
                    for (var i = 0; i < items.Count; i++)
                    {
                        decimal item = items[i];
                        <MudText Typo="Typo.body2">
                            @item
                        </MudText>
                        if (i < items.Count - 1)
                        {
                            <MudDivider Class="my-1"/>
                        }
                    }
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </Column>
        
        <Column Hidden="hide" T="ShipComparisonDataWrapper" Field="RocketPlanesWeaponSplashDamage" Title="Splash damage" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.RocketPlanesWeaponSplashDamage.Any())
                {
                    List<decimal> items = context.Item.RocketPlanesWeaponSplashDamage;
                    for (var i = 0; i < items.Count; i++)
                    {
                        decimal item = items[i];
                        <MudText Typo="Typo.body2">
                            @item
                        </MudText>
                        if (i < items.Count - 1)
                        {
                            <MudDivider Class="my-1"/>
                        }
                    }
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </Column>
        
        <Column Hidden="hide" T="ShipComparisonDataWrapper" Field="RocketPlanesWeaponPenetration" Title="Penetration (mm)" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.RocketPlanesWeaponPenetration.Any())
                {
                    List<int> items = context.Item.RocketPlanesWeaponPenetration;
                    for (var i = 0; i < items.Count; i++)
                    {
                        int item = items[i];
                        if (item != 0)
                        {
                            <MudText Typo="Typo.body2">
                                @item
                            </MudText>
                        }
                        else
                        {
                            <MudText Typo="Typo.body2" Color="Color.Primary">
                                @ShipComparisonViewModel.DataNotAvailable
                            </MudText>
                        }
                        if (i < items.Count - 1)
                        {
                            <MudDivider Class="my-1"/>
                        }
                    }
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </Column>

        <Column Hidden="hide" T="ShipComparisonDataWrapper" Field="RocketPlanesWeaponFireChance" Title="Fire chance (%)" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.RocketPlanesWeaponFireChance.Any())
                {
                    List<decimal> items = context.Item.RocketPlanesWeaponFireChance;
                    for (var i = 0; i < items.Count; i++)
                    {
                        decimal item = items[i];
                        if (item != 0)
                        {
                            <MudText Typo="Typo.body2">
                                @item
                            </MudText>
                        }
                        else
                        {
                            <MudText Typo="Typo.body2" Color="Color.Primary">
                                @ShipComparisonViewModel.DataNotAvailable
                            </MudText>
                        }
                        if (i < items.Count - 1)
                        {
                            <MudDivider Class="my-1"/>
                        }
                    }
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </Column>
        
        <Column Hidden="hide" T="ShipComparisonDataWrapper" Field="RocketPlanesWeaponBlastRadius" Title="Blast radius (m)" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.RocketPlanesWeaponBlastRadius.Any())
                {
                    List<decimal> items = context.Item.RocketPlanesWeaponBlastRadius;
                    for (var i = 0; i < items.Count; i++)
                    {
                        decimal item = items[i];
                        if (context.Item.RocketPlanesWeaponType[i].Equals($"ArmamentType_{RocketType.HE}"))
                        {
                            <MudText Typo="Typo.body2">
                                @item
                            </MudText>
                        }
                        else
                        {
                            <MudText Typo="Typo.body2" Color="Color.Primary">
                                @ShipComparisonViewModel.DataNotAvailable
                            </MudText>
                        }
                        if (i < items.Count - 1)
                        {
                            <MudDivider Class="my-1"/>
                        }
                    }
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </Column>
        
        <Column Hidden="hide" T="ShipComparisonDataWrapper" Field="RocketPlanesWeaponBlastPenetration" Title="Blast penetration" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.RocketPlanesWeaponBlastPenetration.Any())
                {
                    List<decimal> items = context.Item.RocketPlanesWeaponBlastPenetration;
                    for (var i = 0; i < items.Count; i++)
                    {
                        decimal item = items[i];
                        if (context.Item.RocketPlanesWeaponType[i].Equals($"ArmamentType_{RocketType.HE}"))
                        {
                            <MudText Typo="Typo.body2">
                                @item
                            </MudText>
                        }
                        else
                        {
                            <MudText Typo="Typo.body2" Color="Color.Primary">
                                @ShipComparisonViewModel.DataNotAvailable
                            </MudText>
                        }
                        if (i < items.Count - 1)
                        {
                            <MudDivider Class="my-1"/>
                        }
                    }
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </Column>
        
        <Column Hidden="hide" T="ShipComparisonDataWrapper" Field="RocketPlanesWeaponFuseTimer" Title="Fuse timer (s)" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.RocketPlanesWeaponFuseTimer.Any())
                {
                    List<decimal> items = context.Item.RocketPlanesWeaponFuseTimer;
                    for (var i = 0; i < items.Count; i++)
                    {
                        decimal item = items[i];
                        if (item != 0)
                        {
                            <MudText Typo="Typo.body2">
                                @item
                            </MudText>
                        }
                        else
                        {
                            <MudText Typo="Typo.body2" Color="Color.Primary">
                                @ShipComparisonViewModel.DataNotAvailable
                            </MudText>
                        }
                        if (i < items.Count - 1)
                        {
                            <MudDivider Class="my-1"/>
                        }
                    }
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </Column>
        
        <Column Hidden="hide" T="ShipComparisonDataWrapper" Field="RocketPlanesWeaponArmingThreshold" Title="Arming threshold (mm)" HeaderClass="column-text-center" CellClass="column-text-center">
            <CellTemplate>
                @if (context.Item.RocketPlanesWeaponArmingThreshold.Any())
                {
                    List<int> items = context.Item.RocketPlanesWeaponArmingThreshold;
                    for (var i = 0; i < items.Count; i++)
                    {
                        int item = items[i];
                        if (item != 0)
                        {
                            <MudText Typo="Typo.body2">
                                @item
                            </MudText>
                        }
                        else
                        {
                            <MudText Typo="Typo.body2" Color="Color.Primary">
                                @ShipComparisonViewModel.DataNotAvailable
                            </MudText>
                        }
                        if (i < items.Count - 1)
                        {
                            <MudDivider Class="my-1"/>
                        }
                    }
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </Column>
        
        <Column Hidden="hide" T="ShipComparisonDataWrapper" Field="RocketPlanesWeaponRicochetAngles" Title="Ricochet angles (°)" HeaderClass="column-text-center" CellClass="column-text-center" SortBy="@(x => x.RocketPlanesWeaponRicochetAngles.Select(y => double.Parse(y.Split(" - ").First())).ToList())">
            <CellTemplate>
                @if (context.Item.RocketPlanesWeaponRicochetAngles.Any())
                {
                    List<string> items = context.Item.RocketPlanesWeaponRicochetAngles;
                    for (var i = 0; i < items.Count; i++)
                    {
                        string item = items[i];
                        if (!string.IsNullOrEmpty(item))
                        {
                            <MudText Typo="Typo.body2">
                                @item
                            </MudText>
                        }
                        else
                        {
                            <MudText Typo="Typo.body2" Color="Color.Primary">
                                @ShipComparisonViewModel.DataNotAvailable
                            </MudText>
                        }
                        if (i < items.Count - 1)
                        {
                            <MudDivider Class="my-1"/>
                        }
                    }
                }
                else
                {
                    <MudText Typo="Typo.body2" Color="Color.Primary">
                        @ShipComparisonViewModel.DataNotAvailable
                    </MudText>
                }
            </CellTemplate>
        </Column>
    };
}