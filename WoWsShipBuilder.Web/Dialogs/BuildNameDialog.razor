@inject ILocalizer Localizer

<MudDialog>
    <DialogContent>
        <MudFocusTrap DefaultFocus="DefaultFocus.FirstChild">
            <MudTextField @bind-Value="BuildName" Label="Build Name" Immediate Placeholder="Enter build name" Validation="@(new Func<string, string?>(ValidateBuildName))"/>
        </MudFocusTrap>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@Cancel">@Localizer.GetAppLocalization(nameof(Translation.Dialog_Cancel)).Localization</MudButton>
        <MudButton OnClick="@OnConfirm" Disabled="!validBuildName" Color="Color.Success">
            @Localizer.SimpleAppLocalization(nameof(Translation.ShipSelectionWindow_ConfirmButton))
        </MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = new();

    [Parameter]
    public string BuildName { get; set; } = default!;

    private bool validBuildName;

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void OnConfirm()
    {
        MudDialog.Close(BuildName);
    }
    
    private string? ValidateBuildName(string buildName)
    {
        validBuildName = false;
        if (string.IsNullOrWhiteSpace(buildName))
        {
            return null;
        }

        if (!buildName.Contains(';'))
        {
            validBuildName = true;
            return null;
        }

        return "invalid character: '' ; ''";
    }
}