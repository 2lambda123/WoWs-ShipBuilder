@using WoWsShipBuilder.Web.Utility
@using WoWsShipBuilder.Core.DataProvider
@inject Localizer localizer

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6" Class="d-flex justify-space-between">
            <MudIcon Icon="@Icons.Material.Filled.HelpOutline" Color="Color.Info" Size="Size.Large"/>
            Select Shell Type
            <MudIcon Icon="@Icons.Material.Filled.HelpOutline" Color="Color.Info" Size="Size.Large"/>
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudContainer Style="max-height: 400px; overflow-y: scroll">
            @foreach (var ship in ShipList)
            {
                <MudField Label="@localizer[ship.ShipIndex + "_FULL"].Localization" Variant="Variant.Text" FullWidth="true">
                    <MudButtonGroup OverrideStyles="false" Size="Size.Small" Class="align-self-stretch gap-1">
                        @foreach ((string shell, bool selected) in ship.ShellDictionary)
                        {
                            <MudButton Color="Color.Primary" Variant="GetVariantFromBool(selected)" OnClick="@(() => ToggleSelection(ship, shell))">
                                @localizer[shell].Localization
                            </MudButton>
                        }
                    </MudButtonGroup>
                </MudField>
            }
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="ReturnSelectedShells">
            Confirm
        </MudButton>
    </DialogActions>
</MudDialog>

@code 
{
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public List<ShellSelectionWrapper> ShipList { get; set; } = new();

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void ReturnSelectedShells()
    {
        MudDialog.Close(DialogResult.Ok(ShipList));
    }

    private static Variant GetVariantFromBool(bool active)
    {
        return active ? Variant.Filled : Variant.Outlined;
    }

    private void ToggleSelection(ShellSelectionWrapper ship, string shellIndex)
    {
        ship.ShellDictionary[shellIndex] = !ship.ShellDictionary[shellIndex];
        StateHasChanged();
    }
}
