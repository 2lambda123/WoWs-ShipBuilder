@using WoWsShipBuilder.Web.Utility
@using WoWsShipBuilder.Core.DataProvider
@using System.Collections.ObjectModel
@inject Localizer localizer

<MudDialog>
    <TitleContent>
        <MudItem Class="d-flex align-center">
            <MudIcon Icon="@Icons.Material.Filled.HelpOutline" Color="Color.Info" Size="Size.Large"/>
            <MudText Typo="Typo.h6" Class="mx-auto">
                @Translation.DispersionGraphWindow_SelectShell
            </MudText>
        </MudItem>
    </TitleContent>
    <DialogContent>
        <MudContainer Style="max-height: 500px; overflow-y: auto">
            <MudGrid Justify="Justify.Center">
                @foreach (var ship in ShipList)
                {
                    <MudItem xs="12" md="6" Class="d-flex" Style="flex-direction: column">
                        <MudItem Class="d-flex mt-2" Style="justify-content: space-between">
                            <MudText Typo="Typo.caption" Class="my-auto">
                                @localizer[ship.ShipIndex + "_FULL"].Localization
                            </MudText>
                            <MudIconButton Icon="@Icons.Material.Filled.Clear" Color="Color.Primary" Size="Size.Small" OnClick="@(() => RemoveShip(ship))"/>
                        </MudItem>
                        @if (ship.ArtilleryDictionary.Count > 0)
                        {
                            <MudButtonGroup OverrideStyles="false" VerticalAlign="true" Class="gap-1">
                                @foreach ((var artilleryData, bool selected) in ship.ArtilleryDictionary)
                                {
                                    <MudButton Color="GetColorFromBool(selected)" Variant="GetVariantFromBool(selected)" DisableElevation="true" OnClick="@(() => ToggleSelection(ship, artilleryData))">
                                        @localizer[artilleryData.ShellIndex].Localization
                                    </MudButton>
                                }
                            </MudButtonGroup>
                        }
                        else
                        {
                            <MudText Color="Color.Primary">
                                @Translation.MessageBox_ShipNoGun
                            </MudText>
                        }
                        <MudDivider Light="true" Class="mt-2"/>
                    </MudItem>
                }
            </MudGrid>
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel" Variant="Variant.Filled" Color="Color.Primary">
            @Translation.Cancel
        </MudButton>
            <MudFocusTrap DefaultFocus="DefaultFocus.FirstChild">
                <MudButton Color="Color.Info" OnClick="ReturnSelectedShells" Variant="Variant.Filled">
                    @Translation.ShipSelectionWindow_ConfirmButton
                </MudButton>
            </MudFocusTrap>
    </DialogActions>
</MudDialog>

@code 
{
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = new();

    [Parameter] public ObservableCollection<ShellSelectionWrapper> ShipList { get; set; } = new();
    
    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void ReturnSelectedShells()
    {
        MudDialog.Close(DialogResult.Ok(ShipList.Where(x => x.ArtilleryDictionary.ContainsValue(true))));
    }

    private static Variant GetVariantFromBool(bool active)
    {
        return active ? Variant.Filled : Variant.Outlined;
    }
    
    private static Color GetColorFromBool(bool active)
    {
        return active ? Color.Primary : Color.Secondary;
    }

    private void ToggleSelection(ShellSelectionWrapper ship, ArtilleryData artilleryData)
    {
        ship.ArtilleryDictionary[artilleryData] = !ship.ArtilleryDictionary[artilleryData];
        StateHasChanged();
    }

    private void RemoveShip(ShellSelectionWrapper ship)
    {
        ShipList.Remove(ship);
        StateHasChanged();
    }
}
