@page "/"
@using WoWsShipBuilder.Web.Services
@using Newtonsoft.Json
@using WoWsShipBuilder.DataStructures
@using WoWsShipBuilder.ViewModels.Helper
@using System.Diagnostics
@using WoWsShipBuilder.Core.DataProvider
@using WoWsShipBuilder.Core.Services
@inject IAppSettingsService settingsService
@inject IAppDataService appDataService
@inject Localizer localizer

<PageTitle>WoWs ShipBuilder</PageTitle>

<MudContainer>
    <MudText Align="Align.Center" Typo="Typo.h1" Class="main-title">WoWs ShipBuilder</MudText>
    <MudText Align="Align.Center" >
        Welcome to the WoWs ShipBuilder web app.
    </MudText>
    <MudText>
        Settings:
        @JsonConvert.SerializeObject(settingsService.CurrentSettings, Formatting.Indented)
    </MudText>
    
    <MudText >
            Select a ship using the following filters.
    </MudText>
    <MudGrid Justify="Justify.Center">
        <MudItem xs="3">
            <MudCheckBox @bind-Checked="@shipSelectionVm.TierFilterChecked" Label="Tier" Placeholder="I~XI"/>
            <MudSelect T="string" Variant="Variant.Outlined" @bind-Value="@shipSelectionVm.SelectedTier">
                @foreach (var item in shipSelectionVm.TierList)
                {
                    <MudSelectItem Value="@item">@item</MudSelectItem>
                }
            </MudSelect>
         
        </MudItem>
            
        <MudItem xs="3">
            <MudCheckBox @bind-Checked="@shipSelectionVm.ClassFilterChecked" Label="Class" Placeholder="All"/>
            <MudSelect T="ShipClass?" Variant="Variant.Outlined" @bind-Value="@shipSelectionVm.SelectedClass" Strict="true">
                @foreach (ShipClass? item in shipSelectionVm.ClassList)
                {
                    <MudSelectItem Value="@item">@item</MudSelectItem>
                }
            </MudSelect>
         
        </MudItem>
            
        <MudItem xs="3">
            <MudCheckBox @bind-Checked="@shipSelectionVm.NationFilterChecked" Label="Nation" Placeholder="All"/>
            <MudSelect T="Nation?" Variant="Variant.Outlined" @bind-Value="@shipSelectionVm.SelectedNation">
                @foreach (Nation? item in shipSelectionVm.NationList)
                {
                    <MudSelectItem Value="@item">@item</MudSelectItem>
                }
            </MudSelect>
          
        </MudItem>
            
        <MudItem xs="3">
            <MudCheckBox @bind-Checked="@shipSelectionVm.TypeFilterChecked" Label="Type"/>
            <MudSelect T="ShipCategory?" Variant="Variant.Outlined" @bind-Value="@shipSelectionVm.SelectedType" Placeholder="All">
                @foreach (ShipCategory? item in shipSelectionVm.TypeList)
                {
                    <MudSelectItem Value="@item">@item</MudSelectItem>
                }
            </MudSelect>            
          
        </MudItem>
        <MudItem xs="4">
            <MudCard  Style="max-height: 300px; overflow: scroll " Outlined="true">
                <MudList Clickable="true">
                    @foreach (KeyValuePair<string, ShipSummary> item in shipSelectionVm.SummaryList)
                    {
                        <MudListItem Style="text-align: center" Value="@item" >@item.Key</MudListItem>
                    }
                </MudList>
            </MudCard>
        </MudItem>
    </MudGrid>
    <MudButton Variant="Variant.Filled" OnClick="@Test">Test</MudButton>
    <MudText>@data</MudText>

</MudContainer>

@code
{
    private ShipSelectionWindowViewModel shipSelectionVm;

    private string data = default!;
    
    protected override void OnInitialized()
    {
        base.OnInitialized();
        var dict = AppData.ShipSummaryList.ToDictionary(ship => localizer[$"{ship.Index}_FULL"].Localization, ship => ship);
        Console.WriteLine(dict.First());
        shipSelectionVm = new(false, dict);
    }

    void Test()
    {
        data = string.Join(" - ", shipSelectionVm.SelectedTier, shipSelectionVm.SelectedClass, shipSelectionVm.SelectedNation, shipSelectionVm.SelectedType);
    }
}
