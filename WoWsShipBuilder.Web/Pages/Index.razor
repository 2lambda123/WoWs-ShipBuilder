@page "/"
@using System.Collections.ObjectModel
@using System.Collections.Specialized
@using System.Net
@using WoWsShipBuilder.Core.Builds
@using WoWsShipBuilder.Web.Services
@inject NavigationManager NavManager
@inject RefreshNotifierService NotifierService
@inject ILocalizer Localizer
@inject ISnackbar Snackbar
@implements IDisposable

<PageTitle>
    WoWs ShipBuilder
</PageTitle>

<MudContainer>
    <MudGrid Justify="Justify.Center">
        <MudItem xs="12">
            <MudText Align="Align.Center" Typo="Typo.h1" Class="main-title">
                WoWs ShipBuilder
            </MudText>
            <MudText Align="Align.Center" Typo="Typo.h4">
                Welcome to the WoWs ShipBuilder web app.
            </MudText>
        </MudItem>
        <MudItem xs="12">
            <MudStack Row>
                <MudTextField Immediate T="string" Label="Paste Build String" @bind-Value="buildString" />
                <MudButton Disabled="@string.IsNullOrWhiteSpace(buildString)" Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="OnLoadBuild">Load Build</MudButton>
            </MudStack>
        </MudItem>
        <MudItem xs="12" Class="pt-6 pb-0 ml-n4 mr-4">
            <MudDivider DividerType="DividerType.Middle" Style="width: 100%" Light/>
        </MudItem>
        <MudItem xs="12">
            <ShipSelector SelectedShips="@selectedShips"/>
        </MudItem>
        <MudItem xs="12" sm="8" Class="d-flex" Style="justify-content: space-between">
            <MudButton Disabled="@(selectedShips.Count == 0)" Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="@GoToShipPage" FullWidth="true">
                Go to ships page
            </MudButton>
            <MudDivider Vertical="true" DividerType="DividerType.Middle"/>
            <MudButton Disabled="@(selectedShips.Count == 0)" Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="@GoToChartPage" FullWidth="true">
                Go to charts page
            </MudButton>
        </MudItem>
    </MudGrid>
</MudContainer>

@code
{
    private readonly ObservableCollection<string> selectedShips = new();
    
    private string buildString = string.Empty;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        selectedShips.CollectionChanged += SelectedShipsOnCollectionChanged;
        NotifierService.RefreshRequested += OnRefresh;
    }

    private void SelectedShipsOnCollectionChanged(object? sender, NotifyCollectionChangedEventArgs e)
    {
        StateHasChanged();
    }

    private void OnRefresh()
    {
        StateHasChanged();
    }

    private void GoToShipPage()
    {
        string indexes = string.Join(",", selectedShips);
        NavManager.NavigateTo("/ship?shipIndexes=" + indexes);
    }

    private void GoToChartPage()
    {
        string indexes = string.Join(",", selectedShips);
        NavManager.NavigateTo("/charts?shipIndex=" + indexes);
    }

    public void Dispose()
    {
        selectedShips.CollectionChanged -= SelectedShipsOnCollectionChanged;
        NotifierService.RefreshRequested -= OnRefresh;
    }

    private void OnLoadBuild()
    {
        try
        {
            var build = Build.CreateBuildFromString(buildString);
            NavManager.NavigateTo($"/ship?shipIndexes={build.ShipIndex}&build={WebUtility.UrlEncode(buildString)}");
            Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomStart;
            Snackbar.Add("Build loaded", Severity.Success);
        }
        catch (FormatException)
        {
            Snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomStart;
            Snackbar.Add("Failed to load build from string", Severity.Error);
        }
    }
}