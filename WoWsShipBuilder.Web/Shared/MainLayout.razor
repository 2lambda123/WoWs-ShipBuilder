@using WoWsShipBuilder.Core.Services
@using WoWsShipBuilder.Web.Services
@using WoWsShipBuilder.Core.DataProvider
@using System.Diagnostics
@inherits LayoutComponentBase
@inject IDataService dataService
@inject ISnackbar snackbar

<MudThemeProvider Theme="theme" IsDarkMode="true"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

@if (!isInitialized)
{
    <MudOverlay Visible="!isInitialized" DarkBackground="true"/>
}

<MudLayout>
    <TopMenu/>
    <MudMainContent Class="px-2">
        @Body
    </MudMainContent>
    <footer style="margin-top: 16px;">
        <ShipBuilderFooter/>
    </footer>
</MudLayout>

@code
{
    bool isInitialized;

    protected override async Task OnInitializedAsync()
    {
        await ContentIsLoading(true);
        await base.OnInitializedAsync();
        if (dataService is WebDataService webDataService)
        {
            var stopwatch = new Stopwatch();
            stopwatch.Start();
            await Task.Delay(20); 
    // await webDataService.LoadAllShipsAsync(AppData.Settings.SelectedServerType);
            stopwatch.Stop();
            Console.WriteLine(stopwatch.Elapsed);
            await ContentIsLoading(false);
            StateHasChanged();
        }
    }

    private readonly MudTheme theme = new()
    {
        LayoutProperties =
        {
            DefaultBorderRadius = "0",
        },
        PaletteDark =
        {
            Black = "#121212FF",
            White = "#FDFDFDFF",
            Primary = "#505050FF",
            PrimaryContrastText = "#DEDEDEFF",
            Secondary = "#DEDEDEFF",
            Info = "#5C60DBFF",
            InfoContrastText = "#FAF7F9FF",
            Success = "#008C3AFF",
            SuccessContrastText = "#FAF7F9FF",
            Warning = "#BF7300FF",
            WarningContrastText = "#FAF7F9FF",
            Error = "#BF0000FF",
            ErrorContrastText = "#FAF7F9FF",
            Dark = "#282828FF",
            DarkContrastText = "#DEDEDEFF",
            TextPrimary = "#DEDEDEFF",
            TextSecondary = "#FFFFFF89",
            TextDisabled = "#FFFFFF60",
            ActionDefault = "#FFFFFF89",
            ActionDisabled = "#FFFFFF42",
            ActionDisabledBackground = " #FFFFFF1E",
            Surface = "#282828FF",
            LinesDefault = "#FFFFFF4D",
            LinesInputs = "#808080",
            AppbarBackground = "#121212FF",
            HoverOpacity = 0.2,
            DrawerBackground = "#1F1F1F",
            DividerLight = "#FFFFFFCC",
        },
    };

    private async Task ContentIsLoading(bool isLoading)
    {
        if (isLoading)
        {
            snackbar.Add("Loading Data...", Severity.Info);
        }
        else
        {
            snackbar.Add("Data Loading Completed", Severity.Success);
            isInitialized = true;
            StateHasChanged();
            await Task.Delay(5000);
            snackbar.Clear();
            snackbar.Dispose();
        }

    }
}
